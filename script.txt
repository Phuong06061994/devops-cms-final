helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update

helm install ingress-nginx ingress-nginx/ingress-nginx   --namespace ingress   --create-namespace   --set controller.service.type=LoadBalancer   --set controller.service.externalTrafficPolicy=Local

helm install grafana prometheus-community/kube-prometheus-stack   --namespace monitoring   --create-namespace   --set forceCreateNamespace=true   -f grafana.yml


helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
helm repo update
helm upgrade --install jupyterhub jupyterhub/jupyterhub --namespace jupyter --create-namespace --version=2.0.0



helm repo add minio https://charts.min.io/
helm repo update
kubectl create namespace minio

helm install minio minio/minio --namespace minio --set accessKey=admin --set secretKey=admin123 --set service.type=LoadBalancer
kubectl get svc -n minio

helm repo add apache-airflow https://airflow.apache.org
helm repo update
kubectl create namespace airflow
helm install airflow apache-airflow/airflow --namespace airflow --create-namespace -f values.yaml

helm install airflow apache-airflow/airflow --namespace airflow --create-namespace --set airflow.executor=CeleryExecutor --set postgresql.enabled=true --set redis.enabled=true  --set airflow.ingress.enabled=false

helm upgrade --install airflow-dev apache-airflow/airflow 
--namespace airflow --create-namespace 
--set dags.persistence.enabled=true 
--set dags.persistence.existingClaim=logs-pvc 
--set airflow.image.tag="2.6.2" -f ./helm/airflow/values.yaml




  --set executor=CeleryExecutor 
  --set airflow.config.AIRFLOW__CORE__LOAD_EXAMPLES=false 
  --set redis.enabled=true 
  --set postgresql.enabled=true 
  --set airflow.ingress.enabled=true
  --set webserver.service.type=ClusterIP

gcloud projects add-iam-policy-binding gothic-avenue-444923-e9 --member "serviceAccount:gcs-csi-sa@gothic-avenue-444923-e9.iam.gserviceaccount.com" --role "roles/storage.admin"

gcloud iam service-accounts keys create key.json --iam-account gcs-csi-sa@gothic-avenue-444923-e9.iam.gserviceaccount.com
kubectl create secret generic gcs-secret --from-file=key.json --namespace airflow --create-namespace

kubectl apply -k "github.com/kubernetes-sigs/gcp-filestore-csi-driver/deploy/kubernetes/overlays/stable"

kubectl cp ./timedelta.py airflow-dev-scheduler-8bbb89b4c-dxvdb:/opt/airflow/dags -n airflow
kubectl cp ./every_5_minutes_dag.py airflow-dev-scheduler-8bbb89b4c-dxvdb:/opt/airflow/dags -n airflow