helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm install ingress-nginx ingress-nginx/ingress-nginx   --namespace ingress   --create-namespace   --set controller.service.type=LoadBalancer   --set controller.service.externalTrafficPolicy=Local

helm install grafana prometheus-community/kube-prometheus-stack   --namespace monitoring   --create-namespace   --set forceCreateNamespace=true   -f grafana.yml


helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
helm repo update
helm upgrade --install jupyterhub jupyterhub/jupyterhub --namespace jupyter --create-namespace --version=2.0.0



helm repo add minio https://charts.min.io/
helm repo update
kubectl create namespace minio

helm install minio minio/minio --namespace minio --set accessKey=admin --set secretKey=admin123 --set service.type=LoadBalancer
kubectl get svc -n minio

helm repo add apache-airflow https://airflow.apache.org
helm repo update
kubectl create namespace airflow

helm upgrade airflow apache-airflow/airflow 
  --namespace airflow
  --create-namespace
  --set airflow.image.tag="2.6.2" 
  --set executor=CeleryExecutor 
  --set airflow.config.AIRFLOW__CORE__LOAD_EXAMPLES=false 
  --set redis.enabled=true 
  --set postgresql.enabled=true 
  --set airflow.ingress.enabled=true
  --set webserver.service.type=ClusterIP
  --set dags.persistence.enabled=true 
  --set dags.persistence.existingClaim=airflow-pvc 
  --set dags.persistence.size=500Gi
kubectl create secret generic gcs-secret --from-file=key.json --namespace airflow --create-namespace


gcloud container clusters update devops-gke-cluster-02 --region asia-southeast1 --update-addons=GcePersistentDiskCsiDriver=ENABLED

gcloud projects add-iam-policy-binding gothic-avenue-444923-e9 --member="serviceAccount:gcs-csi-sa@gothic-avenue-444923-e9.iam.gserviceaccount.com" --role="roles/storage.admin"



helm install airflow apache-airflow/airflow 
  --namespace airflow 
  --create-namespace 
  --set airflow.image.tag="2.6.2" 
  --set executor=CeleryExecutor 
  --set airflow.config.AIRFLOW__CORE__LOAD_EXAMPLES=false 
  --set redis.enabled=true 
  --set postgresql.enabled=true 
  --set airflow.ingress.enabled=true 
  --set webserver.service.type=ClusterIP 
  --set dags.persistence.enabled=true 
  --set dags.persistence.existingClaim=airflow-pvc 
  --set dags.persistence.size=500Gi


helm upgrade airflow apache-airflow/airflow 
  --namespace airflow 
  --create-namespace 
  --set airflow.image.tag="2.6.2" 
  --set executor=CeleryExecutor 
  --set airflow.config.AIRFLOW__CORE__LOAD_EXAMPLES=false 
  --set redis.enabled=true 
  --set postgresql.enabled=true 
  --set airflow.ingress.enabled=true 
  --set webserver.service.type=ClusterIP 
  --set dags.persistence.enabled=false 
  --set dags.persistence.existingClaim="" 
  --set "extraVolumeMounts[0].name=csi-volume" 
  --set "extraVolumeMounts[0].mountPath=/opt/airflow/dags" 
  --set "extraVolumes[0].name=csi-volume" 
  --set "extraVolumes[0].csi.driver=ephemeral.csi.storage.k8s.io" 
  --set "extraVolumes[0].csi.volumeAttributes.storageClassName=fast" 
  --set "extraVolumes[0].csi.volumeAttributes.size=500Gi"


  helm upgrade airflow apache-airflow/airflow 
  --namespace airflow 
  --create-namespace 
  --set airflow.image.tag="2.6.2" 
  --set executor=CeleryExecutor 
  --set airflow.config.AIRFLOW__CORE__LOAD_EXAMPLES=false 
  --set redis.enabled=true 
  --set postgresql.enabled=true 
  --set airflow.ingress.enabled=true 
  --set webserver.service.type=ClusterIP 
  --set dags.persistence.enabled=false 
  --set "airflow.extraEnv[0].name"=AIRFLOW__CORE__REMOTE_LOGGING 
  --set "airflow.extraEnv[0].value"=true 
  --set "airflow.extraEnv[1].name"=AIRFLOW__CORE__REMOTE_BASE_LOG_FOLDER 
  --set "airflow.extraEnv[1].value"=gs://phuongnv63/logs 
  --set "airflow.extraEnv[2].name"=AIRFLOW__CORE__DAGS_FOLDER 
  --set "airflow.extraEnv[2].value"=gs://phuongnv63/dags 
  --set "airflow.extraEnv[3].name"=GOOGLE_APPLICATION_CREDENTIALS 
  --set "airflow.extraEnv[3].value"="/opt/airflow/key.json" 
  --set "airflow.extraVolumes[0].name"=gcs-storage-secret 
  --set "airflow.extraVolumes[0].secret.secretName"=gcs-storage-secret 
  --set "airflow.extraVolumeMounts[0].name"=gcs-storage-secret 
  --set "airflow.extraVolumeMounts[0].mountPath"=/opt/airflow/key.json 
  --set "airflow.extraVolumeMounts[0].subPath"=key.json


helm install airflow apache-airflow/airflow 
  --namespace airflow 
  --create-namespace 
  --set "airflow.extraEnv[0].name"=GOOGLE_APPLICATION_CREDENTIALS 
  --set "airflow.extraEnv[0].value"=/opt/airflow/key.json 
  --set "airflow.extraVolumes[0].name"=gcs-storage-secret 
  --set "airflow.extraVolumes[0].secret.secretName"=gcs-storage-secret 
  --set "airflow.extraVolumeMounts[0].name"=gcs-storage-secret 
  --set "airflow.extraVolumeMounts[0].mountPath"=/opt/airflow/key.json 
  --set "airflow.extraVolumeMounts[0].subPath"=key.json

